{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"\u961f\u53cb\u662f\u68f5\u7ea2\u9ed1\u6811\u7684wiki","text":"<p>\u8fd9\u91cc\u662f acm \u56e2\u961f \u961f\u53cb\u662f\u68f5\u7ea2\u9ed1\u6811 \u7684 wiki</p>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92-2-%E6%9C%AB%E6%97%A5%E5%9C%A8%E5%B9%B2%E4%BB%80%E4%B9%88%20%E6%9C%89%E6%B2%A1%E6%9C%89%E7%A9%BA%20%E5%8F%AF%E4%BB%A5%E6%9D%A5%E5%86%99DP%E5%98%9B/","title":"\u672b\u65e5\u5728\u5e72\u4ec0\u4e48 \u6709\u6ca1\u6709\u7a7a \u53ef\u4ee5\u6765\u5199DP\u5417?","text":""},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92-2-%E6%9C%AB%E6%97%A5%E5%9C%A8%E5%B9%B2%E4%BB%80%E4%B9%88%20%E6%9C%89%E6%B2%A1%E6%9C%89%E7%A9%BA%20%E5%8F%AF%E4%BB%A5%E6%9D%A5%E5%86%99DP%E5%98%9B/#dp_1","title":"\u7ebf\u6027DP","text":"<p>CF 1613 D MEX Sequences</p> <p>\u5bf9\u4e8e\u4e00\u4e2a\u5e8f\u5217 $x_1, x_2, \\dots, x_k$ \u662f <code>MEX-correct</code> \u5e8f\u5217\u5f53\u4e14\u4ec5\u5f53\u5bf9\u4e8e\u6240\u6709\u7684$i$ ($1 \\le i \\le k$) $|x_i - \\operatorname{MEX}(x_1, x_2, \\dots, x_i)| \\le 1$ \u6210\u7acb\u3002\u7ed9\u4e00\u4e2a\u5e8f\u5217\u6c42\u6240\u6709\u6ee1\u8db3\u6761\u4ef6\u5b50\u5e8f\u5217\u7684\u4e2a\u6570\u3002</p> <p>\u8003\u8651\u6743\u503c\u3002</p> <p>\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u82e5\u4e00\u4e2a\u5e8f\u5217\u662f <code>MEX-correct</code>\u7684,\u8bbe\u6700\u5927\u503c\u4e3a $maxv$,\u5fc5\u53ea\u6709\u4ee5\u4e0b\u4e24\u79cd\u5f62\u6001\u3002</p> <ul> <li>\u4ece $0$ \u5230 $maxv$ \u7684\u6570\u503c\u7684\u5404\u4e2a\u6570\u91cf\u81f3\u5c11\u4e3a $1$\u3002</li> <li>\u4ece $0$ \u5230 $maxv - 2$ \u548c \u4ece $maxv$ \u5230 $maxv$ \u7684\u6570\u503c\u7684\u5404\u4e2a\u6570\u91cf\u81f3\u5c11\u4e3a $1$\u3002</li> </ul> <p>\u7b80\u5355\u6765\u8bf4\u5c31\u662f\uff0c</p> <ul> <li> <p>$[0, maxv]$ \u6bcf\u4e2a\u5143\u7d20\u90fd\u6709\u3002</p> </li> <li> <p>$[0, maxv - 1]$ \u548c $[maxv, maxv]$\u6bcf\u4e2a\u5143\u7d20\u90fd\u6709\u3002</p> </li> </ul> <p>\u90a3\u4e48\u5b9a\u4e49,\u5230\u76ee\u524d\u51b3\u7b56\u9636\u6bb5 $i-1$ \u7684\u72b6\u6001\u4e2d\u6700\u5927\u503c\u4e3a $val$ ,\u4e14\u6ee1\u8db3\u6761\u4ef6 $1$\u7684\u6570\u91cf\u4e3a $dp1_{val}$,\u6ee1\u8db3\u6761\u4ef62\u7684\u4e3a $dp2_{val}$ \u90a3\u4e48\u6211\u4eec\u51b3\u7b56 i \u7684\u65f6\u5019\u6709\u5982\u4e0b\u8f6c\u79fb</p> <ul> <li> <p>$dp2_{a[i]} += dp2_{a[i]}$,\u7b2c\u4e8c\u79cd\u60c5\u51b5\u6700\u5927\u503c\u53ef\u4ee5\u6dfb\u52a0\u3002</p> </li> <li> <p>$dp2_{a[i] + 2} += dp2_{a[i] + 2}$,\u7b2c\u4e8c\u79cd\u60c5\u51b5\u7b2c\u4e8c\u5927\u503c\u53ef\u4ee5\u6dfb\u52a0\u3002</p> </li> <li> <p>$dp2_{a[i]} += dp1_{a[i] - 2}$,\u7b2c\u4e8c\u79cd\u60c5\u51b5\u7531\u5728\u7b2c\u4e00\u79cd\u60c5\u51b5\u8f6c\u5316\u800c\u6765\u3002</p> </li> <li> <p>$dp1_{a[i]} += dp1_{a[i]}$</p> </li> <li> <p>$dp1_{a[i]} += dp1_{a[i] - 1}$</p> </li> </ul> <pre><code>void solve()\n{\n    cin &gt;&gt; n;\n    vector&lt;int&gt; a(n + 1);\n    rep(i,1,n) cin &gt;&gt; a[i];\n\n    vector&lt;int&gt; dp1(n + 5), dp2(n + 5);\n\n\n    dp1[0] = 1; // \u5411\u53f3\u504f\u79fb\u4e00\u4f4d\uff0c\u8fd9\u91cc\u7684 0 \u76f8\u5f53\u4e8e -1\n\n    for(int i = 1;i &lt;= n;i ++)\n    {\n        a[i] ++;\n        (dp2[a[i]] += dp2[a[i]]) %= mod; \n        (dp2[a[i] + 2] += dp2[a[i] + 2]) %= mod;\n        if(a[i] &gt;= 2)(dp2[a[i]] += dp1[a[i] - 2]) %= mod;\n        (dp1[a[i]] += dp1[a[i]]) %= mod;\n        (dp1[a[i]] += dp1[a[i] - 1]) %= mod;\n\n    }\n\n    int res = 0;\n\n    for(int i = 1;i &lt;= n + 1;i ++)\n    (res += dp1[i] + dp2[i]) %= mod;\n\n    cout &lt;&lt; res &lt;&lt; endl;\n</code></pre> <p>ABC321 F</p> <p>\u6211\u4eec\u6709\u4e00\u4e2a\u76d2\u5b50\uff0c\u6700\u521d\u662f\u7a7a\u7684\u3002 \u8ba9\u6211\u4eec\u6309\u7167\u8f93\u5165\u4e2d\u7ed9\u51fa\u7684\u987a\u5e8f\uff0c\u603b\u5171\u6267\u884c\u4ee5\u4e0b\u4e24\u79cd\u7c7b\u578b\u7684 $Q$ \u64cd\u4f5c\u3002</p> <p>\u7c7b\u578b $1$\uff1a\u5728\u76d2\u5b50\u4e2d\u653e\u5165\u4e00\u4e2a\u5199\u6709\u6574\u6570 $x$ \u7684\u5c0f\u7403\u3002</p> <p>\u7c7b\u578b $2$\uff1a\u4ece\u76d2\u5b50\u4e2d\u53d6\u51fa\u4e00\u4e2a\u5199\u6709\u6574\u6570$x$\u7684\u5c0f\u7403\u3002  </p> <p>\u6bcf\u6b21\u64cd\u4f5c\u540e,\u6c42\u4ece\u76d2\u5b50\u4e2d\u62fe\u53d6\u4e00\u5b9a\u6570\u91cf\u7684\u7403\uff0c\u4f7f\u5199\u5728\u7403\u4e0a\u7684\u6574\u6570\u548c\u4e3a$K$\u7684\u6570\u91cf\u3002</p> <p>\u5f00\u4e00\u4e2a $dp$ \u6876\uff0c\u8003\u8651 $dp_{i}$ \u4e3a\u5f53\u524d\u60c5\u51b5\u4e0b\u6784\u6210\u6570\u5b57 $i$ \u7684\u65b9\u6848\u6709\u591a\u5c11\u4e2a\u3002</p> <p>\u6bcf\u6b21\u4fee\u6539\u8fdb\u884c $O(n)$ \u679a\u4e3e\u5373\u53ef\u3002</p> <pre><code>const int N = 5e3 + 100;\nint dp[N];\n\nint a[N];\n\nvoid solve()\n{\n  int q,k;\n  cin &gt;&gt; q &gt;&gt; k;\n\n  dp[0] = 1;\n\n  for(int i = 0;i &lt; q;i ++)\n  {\n    string op; int v;\n\n    cin &gt;&gt; op &gt;&gt; v;\n\n    if(op[0] == '+'){\n      for(int j = k;j &gt;= v;j --){\n        dp[j] += dp[j - v];\n        dp[j] %= mod;\n      }\n    }\n    else\n    {\n      for(int j = v;j &lt;= k;j ++){\n        dp[j] += (mod - dp[j - v]);\n        dp[j] %= mod;\n      }\n    }\n\n    cout &lt;&lt; dp[k] &lt;&lt; endl;\n  }\n}\n</code></pre>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92-2-%E6%9C%AB%E6%97%A5%E5%9C%A8%E5%B9%B2%E4%BB%80%E4%B9%88%20%E6%9C%89%E6%B2%A1%E6%9C%89%E7%A9%BA%20%E5%8F%AF%E4%BB%A5%E6%9D%A5%E5%86%99DP%E5%98%9B/#dp_2","title":"\u6982\u7387DP","text":"<p>BZOJ #3036. \u7eff\u8c46\u86d9\u7684\u5f52\u5bbf</p> <p>\u7ed9\u4e00\u4e2a\u6709\u5411\u65e0\u73af\u56fe\uff0c\u8d77\u70b9\u4e3a $1$\uff0c\u7ec8\u70b9\u4e3a$n$;</p> <p>\u5230\u8fbe\u6bcf\u4e00\u4e2a\u9876\u70b9\u65f6\uff0c\u5982\u679c\u6709 $k$ \u6761\u79bb\u5f00\u8be5\u70b9\u7684\u9053\u8def\uff0c\u90a3\u4e48\u8d70\u5411\u6bcf\u6761\u8def\u7684\u6982\u7387\u4e3a $\\frac{1}{k}$\u3002</p> <p>\u6c42\u5230\u7ec8\u70b9\u7684\u8ddd\u79bb\u671f\u671b\u3002</p> <p>\u8bb0 $f_{i}$ \u8868\u793a\u4e3a\u4ece $i$ \u5230\u7ec8\u70b9 $n$ \u7684\u671f\u671b\u957f\u5ea6\u3002</p> <p>\u8003\u8651\u4e00\u6761\u8fb9 $u \\rightarrow v$,\u7531\u4e8e\u8fdb\u884c\u4e86\u62d3\u6251\u6392\u5e8f,\u6240\u4ee5$dp_{v}$ \u5df2\u77e5\u3002</p> <p>$dp_{u} = p \\times ( dp_{v} +  w_{u \\rightarrow v} )$, $p = \\frac{1}{k}$\u3002</p> <pre><code>void topsort()\n{\n    queue&lt;int&gt; q;\n    q.push(n);\n\n    while(q.size())\n    {\n        int u = q.front(); q.pop();\n        //int sz = g[u].size();\n\n        for(auto t : g[u])\n        {\n            int v = t.first; int len = t.second;\n            d[v] += 1.0 / sz[v] * (len + d[u]);\n            din[v] --;\n            if(din[v] == 0) q.push(v);\n        }\n    }\n\n}\n\n\nvoid solve()\n{\n\n    cin &gt;&gt; n &gt;&gt; m;\n    for(int i = 1;i &lt;= m; i ++)\n    {\n        int u,v,c;\n        cin &gt;&gt; u &gt;&gt; v &gt;&gt; c;\n\n        din[u] ++; sz[u] ++;\n        g[v].push_back(PII(u,c));\n    }\n\n    topsort();\n\n    cout &lt;&lt; fixed &lt;&lt; setprecision(2) &lt;&lt;  d[1] &lt;&lt; endl;\n\n}\n</code></pre> <p>\u601d\u8003\u53c2\u8003:\u4e3a\u4ec0\u4e48\u901a\u5e38\u671f\u671bdp\u8981\u5012\u63a8\uff1f</p>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92-2-%E6%9C%AB%E6%97%A5%E5%9C%A8%E5%B9%B2%E4%BB%80%E4%B9%88%20%E6%9C%89%E6%B2%A1%E6%9C%89%E7%A9%BA%20%E5%8F%AF%E4%BB%A5%E6%9D%A5%E5%86%99DP%E5%98%9B/#dp_3","title":"DP\u4e0e\u4e8c\u8fdb\u5236","text":"<p>CF 1635 D. Infinite Set</p> <p>\u7ed9$n$\u4e2a\u6570$a_{n}$\uff0c\u4e00\u4e2a\u5927\u5c0f\u9650\u5236$p$ \u53ef\u4ee5\u8fdb\u884c\u4efb\u610f\u6b21\u6570\u7684\u64cd\u4f5c\uff0c\u6bcf\u6b21\u64cd\u4f5c\u9009\u5b9a\u96c6\u5408\u91cc\u4e00\u4e2a$x$ \u5c06$2 \\times x + 1$\u6216\u8005$4 \\times x$\u52a0\u5165\u5230\u96c6\u5408\u4e2d \u95ee\u8be5\u96c6\u5408\u4e2d\u5c0f\u4e8e$2^{p}$\u7684\u6570\u6709\u51e0\u4e2a</p> <p>\u5c06$x$\u770b\u6210\u4e8c\u8fdb\u5236\u3002 \u7b2c\u4e00\u4e2a\u64cd\u4f5c\u4fbf\u662f\u5c06<code>x &lt;&lt; 1 | 1</code>\u52a0\u5230\u96c6\u5408\u4e2d\u3002\u770b\u6210\u5728\u67d0\u4e2a\u6570\u7684\u4e8c\u8fdb\u5236\u8868\u793a\u540e\u9762\u52a0\u4e00\u4e2a<code>1</code>\u3002 \u7b2c\u4e8c\u4e2a\u64cd\u4f5c\u4fbf\u662f\u5c06<code>x &lt;&lt; 2</code>\u52a0\u5230\u96c6\u5408\u4e2d\u3002\u770b\u6210\u5728\u67d0\u4e2a\u6570\u7684\u4e8c\u8fdb\u5236\u8868\u793a\u540e\u9762\u52a0\u4e24\u4e2a<code>0</code>\u3002</p> <p>\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u4e00\u4e2a\u6027\u8d28\uff0c\u6839\u636e\u5947\u5076\u6027\uff0c\u4e00\u4e2a\u6570\u8981\u4e48\u7531\u64cd\u4f5c<code>1</code>\u53d8\u8fc7\u6765\uff0c\u8981\u4e48\u7531\u64cd\u4f5c<code>2</code>\u53d8\u8fc7\u6765\u3002</p> <p>\u8bbe$f_{i}$\u4ee3\u8868\u539f\u4e8c\u8fdb\u5236\u4e32\u5de6\u79fb$i$\u4e2a\u5355\u4f4d\u80fd\u5f97\u5230\u7684\u6240\u6709\u7684\u4e0d\u540c\u4e8c\u8fdb\u5236\u4e32\u7684\u4e2a\u6570 \u8bbe$dp_{i}$\u4ee3\u8868\u539f\u4e8c\u8fdb\u5236\u4e32\u5de6\u79fb$i$\u4e2a\u5355\u4f4d\u80fd\u5f97\u5230\u7684\u4e0d\u540c\u4e8c\u8fdb\u5236\u4e32\u7684\u4e2a\u6570</p> <p>\u53ef\u77e5$dp_{i} = dp_{i-1} + dp_{i-2}$\u4e5f\u5c31\u662f\u901a\u8fc7\u524d\u4e24\u79cd\u65b9\u6cd5\u5f97\u5230\u8f6c\u79fb \u800c$f_{i}$\u4e5f\u5c31\u662f$dp_{i}$\u7684\u524d\u7f00\u548c</p> <p>\u5bf9\u4e8e\u67d0\u4e2a\u957f\u5ea6\u4e3a$l$\u7684\u6570$x$ \u4ed6\u53ef\u4ee5\u5f62\u6210\u957f\u5ea6\u4e3a$l + 1$\u7684\u6570\u7684\u79cd\u6570\u4e3a<code>1</code>\u79cd\u3002\u5373\u6cd5\u4e00\u3002 \u4ed6\u53ef\u4ee5\u5f62\u6210\u957f\u5ea6\u4e3a$l + 2$\u7684\u6570\u7684\u79cd\u6570\u4e3a<code>2</code>\u79cd\u3002\u5373\u4e24\u6b65\u6cd5\u4e00\u548c\u4e00\u6b65\u6cd5\u4e8c\u3002</p> <pre><code>\nconst int N = 2e5 + 100;\nconst int mod = 1e9 + 7;\n\nint f[N];\nint sum[N];\nint a[N];\nmap&lt;int,bool&gt; mp;\n\nint n,p;\n\nvoid init()\n{\n  f[0] = f[1] = 1;\n  sum[0] = 1;\n  sum[1] = 2;\n  for(int i = 2;i &lt;= 2e5 + 10;i ++){\n    f[i] = (f[i - 1] + f[i - 2])%mod;\n    sum[i] = (sum[i - 1] + f[i])%mod;\n  }\n}\n\nbool check(int x)\n{\n   while(x)\n   {\n     if(x % 2 == 1) x &gt;&gt;= 1;\n     else if(x % 4 == 0)x &gt;&gt;= 2;\n     else break;\n\n     if(mp.count(x)) return false;\n   }\n\n   return true;\n}\n\nint bit(int x)\n{\n  int res = 0;\n  while(x) x &gt;&gt;= 1, res ++;\n  return res;\n}\n\nvoid solve()\n{\n   init();\n   cin &gt;&gt; n &gt;&gt; p;\n   int res = 0;\n\n   for(int i = 1;i &lt;= n;i ++) cin &gt;&gt; a[i];\n   for(int i = 1;i &lt;= n;i ++) mp[a[i]] = true;\n\n   for(int i = 1;i &lt;= n;i ++)\n   if(check(a[i])){\n    int len = bit(a[i]);\n    if(p - len &gt;= 0) (res += sum[p - len]) %= mod;\n   }\n\n   cout &lt;&lt; res &lt;&lt; endl;\n\n}\n</code></pre> <p>upd:20231023</p>"}]}